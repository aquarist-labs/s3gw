---
name: Release S3GW
on:
  push:
    tags:
      - "v*"

jobs:
  set-git-refs:
    runs-on: ubuntu-latest

    outputs:
      ceph-git-ref: ${{ steps.git-refs.outputs.ceph }}
      tools-git-ref: ${{ steps.git-refs.outputs.tools }}
      ui-git-ref: ${{ steps.git-refs.outputs.ui }}
      charts-git-ref: ${{ steps.git-refs.outputs.charts }}
      github-ref-name: ${{ steps.git-refs.outputs.github-ref-name }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set Git Refs
        id: git-refs
        run: |
          for r in $(git submodule | awk '{print $2}'); do
            echo "${r}=$(git log -1 --format=\"%H\" \"${r}\")" >> $GITHUB_OUTPUT
          done
          echo "github-ref-name=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

  # Build the build-environment container, using it's workflow
  build-env:
    runs-on: ubuntu-latest
    needs:
      - set-git-refs

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dockerhub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Buildenv Container
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/buildenv-radosgw:${{ needs.set-git-refs.outputs.github-ref-name }}
          file: tools/build/Dockerfile.build-radosgw
          context: tools/build

  # Build the radosgw binary using the previously built container image
  build-radosgw:
    runs-on: ubuntu-latest
    needs:
      - set-git-refs
      - build-env

    outputs:
      artifact_id: ${{ steps.artifact_id.outputs.artifact_id }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: aquarist-labs/ceph
          ref: ${{ needs.outputs.ceph-git-ref }}
          submodules: recursive
          path: ceph

      - name: Create CCache Timestamp
        id: ccache_timestamp
        run: |
          echo "timestamp=$(date +%Y-%m-%d-%H:%M:%S)" >> $GITHUB_OUTPUT

      - name: Cache CCache Files
        uses: actions/cache@v3.0.4
        with:
          path: ceph/build.ccache
          key: ccache-${{ steps.ccache_timestamp.outputs.timestamp }}
          restore-keys: |
            ccache-

      - name: Build radosgw Binary
        run: |
          docker run --rm \
            -v $GITHUB_WORKSPACE/ceph:/srv/ceph \
            -e NPROC=4 \
            -e CMAKE_BUILD_TYPE=Release \
            ${{ secrets.DOCKERHUB_USERNAME }}/buildenv-radosgw:${{ needs.set-git-refs.outputs.github-ref-name }}

      - name: Compress Build Results
        run: |
          tar -czvf build-results.tar.gz \
            ceph/build/bin/radosgw \
            ceph/build/lib/libceph-common.so \
            ceph/build/lib/libceph-common.so.2 \
            ceph/build/lib/librados.so \
            ceph/build/lib/librados.so.2 \
            ceph/build/lib/librados.so.2.0.0

      - name: Generate Artifact Identifier
        id: artifact_id
        run: |
          ARTIFACT_ID=radosgw-${{ needs.set-git-refs.outputs.github-ref-name }}
          echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact_id.outputs.artifact_id }}
          path: build-results.tar.gz

  # Build and push the radosgw container using the radosgw-binary
  build-s3gw-container:
    runs-on: ubuntu-latest
    needs:
      - set-git-refs
      - build-radosgw

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Quay Login
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Download Radogw Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build-radosgw.outputs.artifact_id }}

      - name: Unpack Artifacts
        run: |
          tar -xvf build-results.tar.gz

      - name: Build S3GW Container
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            quay.io/s3gw/s3gw:${{ needs.set-git-refs.outputs.github-ref-name }}
            quay.io/s3gw/s3gw:latest
          file: tools/build/Dockerfile.build-container
          context: ceph/build

  # Build and push the ui container
  build-s3gw-ui-container:
    runs-on: ubuntu-latest
    needs:
      - set-git-refs

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Quay Login
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and Push Container
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            quay.io/s3gw/s3gw-ui:${{ needs.set-git-refs.outputs.github-ref-name }}
            quay.io/s3gw/s3gw-ui:latest
          file: ui/Dockerfile
          context: ui

  draft-release:
    runs-on: ubuntu-latest
    needs:
      - build-s3gw-container
      - build-s3gw-ui-container

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        body_path: docs/release-notes/latest
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          LICENSE

  # Release the charts
  # TODO
